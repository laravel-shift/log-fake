name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: 'Lint'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: pcov

      - name: Get composer cache directory 
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('./composer.json', './vendor-bin/dev/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-suggest --no-interaction

      - name: Check platform requirements
        run: composer check-platform-reqs --verbose

      - name: Check for unused dependencies
        run: ./vendor/bin/composer-unused --verbose

      - name: Check for soft dependencies
        run: ./vendor/bin/composer-require-checker --verbose

      - name: PHP-CS-Fixer
        run: ./vendor/bin/php-cs-fixer fix --dry-run --no-interaction --verbose

      - name: test coverage
        run: |
          ./vendor/bin/phpunit --coverage-clover=coverage.xml --verbose
          bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Infection
        run: ./vendor/bin/infection --show-mutations --min-msi=100 --no-progress --no-interaction --verbose
        env:
          INFECTION_BADGE_API_KEY: ${{ secrets.INFECTION_BADGE_API_KEY }}

      - name: PHPStan
        run: ./vendor/bin/phpstan --no-interaction --verbose


  tests:
    runs-on: ubuntu-latest
    name: 'PHP: ${{ matrix.php }}; Dependecies: ${{ matrix.dependency-version }}'
    strategy:
      matrix:
        php: ['8.0', '8.1', '8.2']
        laravel: ['^9.0', '^10.0']
        dependency-version: ['prefer-lowest', 'prefer-stable']
        exclude:
          - php: '8.0'
            laravel: '^10.0'

    steps:
    - name: checkout code
      uses: actions/checkout@v3

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        coverage: none

    - name: Get composer cache directory 
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-dependencies-${{ matrix.dependency-version }}-php-${{ matrix.php }}-php-${{ matrix.laravel }}
        restore-keys: ${{ runner.os }}-dependencies-

    - name: Require Laravel version
      run: composer require --no-update illuminate/collections:${{ matrix.laravel }} illuminate/contracts:${{ matrix.laravel }} illuminate/log:${{ matrix.laravel }} illuminate/support:${{ matrix.laravel }} illuminate/config:${{ matrix.laravel }} illuminate/container:${{ matrix.laravel }}

    - name: Install dependencies
      run: composer update --${{ matrix.dependency-version }} --prefer-dist --no-suggest --no-interaction --verbose --no-scripts

    - name: Check platform requirements
      run: composer check-platform-reqs --verbose

    - name: Run tests
      run: ./vendor/bin/phpunit --verbose
